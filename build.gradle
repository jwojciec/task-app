buildscript {
    ext {
        springBootVersion = '1.5.8.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id "com.moowork.node" version "1.3.1"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-jersey')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.2'
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

node {
    npmVersion = '6.1.0'
    download = true
    nodeModulesDir = file("${project.projectDir}/src/main/react-app")
}

task npmInstall(overwrite: true, type: NpmTask, dependsOn: 'npmSetup') {
    inputs.file("${project.projectDir}/src/main/react-app/package.json")
    outputs.upToDateWhen { file('node_modules').exists() }

    npmCommand = ['install']
}

task npmBuild(overwrite: true, type: NpmTask, dependsOn: 'npmInstall') {
    inputs.file("${project.projectDir}/src/main/react-app/package.json")
    outputs.upToDateWhen { file('node_modules').exists() }

    npmCommand = ['run', 'build']
}

task copyStatic(type: Copy, dependsOn: 'npmBuild') {
    into "${project.projectDir}/src/main/resources/static/"
    from "${project.projectDir}/src/main/react-app/build/"
}

processResources.dependsOn copyStatic
